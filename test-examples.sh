#!/bin/bash

echo "üß™ Exemplos de teste para o sistema Event-Driven Architecture"
echo ""

# Configura√ß√µes
USER_SERVICE_URL="http://localhost:8081"
PRODUCT_SERVICE_URL="http://localhost:8082"
ORDER_SERVICE_URL="http://localhost:8083"
QUERY_SERVICE_URL="http://localhost:8084"

echo "üìã Exemplos de comandos curl para testar o sistema:"
echo ""

echo "1Ô∏è‚É£ Criar usu√°rio:"
echo "curl -X POST $USER_SERVICE_URL/api/v1/users \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"name\": \"Jo√£o Silva\","
echo "    \"email\": \"joao@exemplo.com\""
echo "  }'"
echo ""

echo "2Ô∏è‚É£ Criar produto:"
echo "curl -X POST $PRODUCT_SERVICE_URL/api/v1/products \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"name\": \"Notebook Dell\","
echo "    \"price\": 3500.00,"
echo "    \"stock\": 10"
echo "  }'"
echo ""

echo "3Ô∏è‚É£ Criar pedido:"
echo "curl -X POST $ORDER_SERVICE_URL/api/v1/orders \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"user_id\": 1,"
echo "    \"items\": ["
echo "      {"
echo "        \"product_id\": 1,"
echo "        \"quantity\": 1"
echo "      }"
echo "    ]"
echo "  }'"
echo ""

echo "4Ô∏è‚É£ Pagar pedido:"
echo "curl -X POST $ORDER_SERVICE_URL/api/v1/orders/1/pay"
echo ""

echo "5Ô∏è‚É£ Consultar pedido no read model:"
echo "curl $QUERY_SERVICE_URL/q/orders/1"
echo ""

echo "6Ô∏è‚É£ Listar produtos:"
echo "curl $QUERY_SERVICE_URL/q/products"
echo ""

echo "7Ô∏è‚É£ Listar usu√°rios:"
echo "curl $QUERY_SERVICE_URL/q/users"
echo ""

echo "8Ô∏è‚É£ Buscar pedidos por usu√°rio:"
echo "curl \"$QUERY_SERVICE_URL/q/orders?user_id=1&status=PAID\""
echo ""

echo "9Ô∏è‚É£ Atualizar produto:"
echo "curl -X PATCH $PRODUCT_SERVICE_URL/api/v1/products/1 \\"
echo "  -H 'Content-Type: application/json' \\"
echo "  -d '{"
echo "    \"price\": 3200.00,"
echo "    \"stock\": 8"
echo "  }'"
echo ""

echo "üîü Cancelar pedido:"
echo "curl -X POST $ORDER_SERVICE_URL/api/v1/orders/1/cancel"
echo ""

echo "üìä Verificar health checks:"
echo "curl $USER_SERVICE_URL/healthz"
echo "curl $PRODUCT_SERVICE_URL/healthz"
echo "curl $ORDER_SERVICE_URL/healthz"
echo "curl $QUERY_SERVICE_URL/healthz"
echo ""

echo "üåê Interfaces web:"
echo "Kafka UI: http://localhost:8080"
echo "Mongo Express: http://localhost:8081 (admin/admin)"
echo ""

echo "üìù Fluxo completo de teste:"
echo "1. Subir infraestrutura: make up"
echo "2. Executar servi√ßos em terminais separados:"
echo "   - Terminal 1: make run-user"
echo "   - Terminal 2: make run-product"
echo "   - Terminal 3: make run-order"
echo "   - Terminal 4: make run-query"
echo "3. Executar os comandos acima em sequ√™ncia"
echo "4. Verificar eventos no Kafka UI"
echo "5. Verificar proje√ß√µes no Mongo Express"
echo ""

echo "üéØ Dicas:"
echo "- Monitore os logs dos servi√ßos para ver o fluxo de eventos"
echo "- Use o Kafka UI para ver mensagens em tempo real"
echo "- Use o Mongo Express para ver as proje√ß√µes no MongoDB"
echo "- Verifique as DLQs se houver falhas"
echo ""
